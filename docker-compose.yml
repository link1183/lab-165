services:
  # MongoDB standalone server
  mongodb:
    image: mongo:5.0
    container_name: mongodb-lab165
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
      - ./data:/docker-entrypoint-initdb.d:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=AdminPassword123!
      - MONGO_INITDB_DATABASE=my_data
    networks:
      - lab165-network

  # Flask application (standalone mode)
  app:
    build: .
    container_name: flask-app-lab165
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb
      - MONGO_PORT=27017
      - MONGO_DB=my_data
      - MONGO_COLLECTION=open_data
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=AdminPassword123!
      - MONGO_AUTH_DB=admin
    networks:
      - lab165-network
    volumes:
      - ./templates:/app/templates:ro
      - ./static:/app/static:ro

  # MongoDB Admin UI (optional)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-lab165
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=AdminPassword123!
      - ME_CONFIG_MONGODB_URL=mongodb://admin:AdminPassword123!@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - lab165-network
    profiles:
      - tools

networks:
  lab165-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local
